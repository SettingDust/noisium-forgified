//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyAccessibility

plugins {
    id "dev.architectury.loom" version "1.5-SNAPSHOT"
    id 'maven-publish'
}

version = "${project.mod_version}+mc${project.supported_minecraft_version}"
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

loom {
    accessWidenerPath = file("src/main/resources/noisium.accesswidener")
    forge {
        convertAccessWideners = true
        mixinConfigs = [
                "noisium-forgified.mixins.json"
        ]
    }
}

repositories {
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.minecraft_version}+${project.yarn_mappings}:v2"
    forge "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    filteringCharset "UTF-8"

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {}
}

loom {
    accessWidenerPath = file("src/main/resources/noisium.accesswidener")
}
